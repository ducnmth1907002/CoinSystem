@model PagedList.IPagedList<Coin.Models.Subscribe>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
}

<h2>List Subscrible</h2>
<div class="card-body">
    <div class="row" style="margin-bottom: 30px">
        <div class="col-8" style="margin-bottom: 30px">

        </div>
        <div class="col-4">
            @using (Html.BeginForm("Index", "Subscribes", FormMethod.Get))
            {
                <p>
                    Find by title: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                    <input type="submit" value="Search" />
                </p>
            }
        </div>
    </div>
    <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
        <thead>
            <tr>
                <th>
                    Email
                </th>
                <th>
                    StartDate
                </th>
                <th>
                    EndDate
                </th>
                <th>
                    Type
                </th>
                <th>
                    Status
                </th>
                <th>
                    CreatedAt
                </th>
                <th>
                    UpdatedAt
                </th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.User.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedAt)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UpdatedAt)
                    </td>
                    <td>
                        <button class="btn btn-primary text-uppercase" style="margin-left: 5px">
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                        </button>
                        <button class="btn btn-info text-uppercase" style="margin-left: 5px">
                            @Html.ActionLink("Details", "Details", new { id = item.Id })
                        </button>
                        <button class="btn btn-danger text-uppercase" style="margin-left: 5px">
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                        </button>
                    </td>
                </tr>
            }

        </tbody>
    </table>
    @**@Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>